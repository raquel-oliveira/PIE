% http://jsmachines.sourceforge.net/machines/ll1.html

PROGRAM -> 'program' 'id' ';' DECL BLOCK '.'

DECL -> CONSTS USERTYPES VARS SUBPROGRAMS

CONSTS -> ''
CONSTS -> 'const' LISTCONST

LISTCONST -> CONSTDECL LISTCONSTPRIME

LISTCONSTPRIME -> ''
LISTCONSTPRIME -> LISTCONST

CONSTDECL -> 'id' '=' EXPR ';'

TYPES -> 'id' TYPESPRIME
TYPES -> PRIMTYPES

TYPESPRIME -> ''
TYPESPRIME -> '..' SUBRANGETYPE

PRIMTYPES -> 'int' PRIMTYPESPRIME
PRIMTYPES -> 'real'
PRIMTYPES -> 'bool'
PRIMTYPES -> 'char' PRIMTYPESPRIME
PRIMTYPES -> 'string'
PRIMTYPES -> ARRAYTYPE
PRIMTYPES -> SETTYPE
PRIMTYPES -> ENUMTYPE
PRIMTYPES -> RECORDTYPE

PRIMTYPESPRIME -> '..' SUBRANGETYPE
PRIMTYPESPRIME -> ''

ARRAYTYPE -> 'array' '[' SUBRANGELIST ']' 'of' TYPES

SUBRANGELIST -> 'id' '..' SUBRANGETYPE SUBRANGELISTPRIME
SUBRANGELIST -> 'int' '..' SUBRANGETYPE SUBRANGELISTPRIME
SUBRANGELIST -> 'char' '..' SUBRANGETYPE SUBRANGELISTPRIME

SUBRANGELISTPRIME -> ''
SUBRANGELISTPRIME -> ',' SUBRANGELIST

SUBRANGETYPE -> 'id'
SUBRANGETYPE -> 'int'
SUBRANGETYPE -> 'char'

SETTYPE -> 'set' 'of' TYPES

ENUMTYPE -> '(' IDLIST ')'

RECORDTYPE -> 'record' VARLISTLIST 'end'

USERTYPES -> ''
USERTYPES -> 'type' LISTUSERTYPES

LISTUSERTYPES -> USERTYPE LISTUSERTYPESPRIME

LISTUSERTYPESPRIME -> ''
LISTUSERTYPESPRIME -> LISTUSERTYPES

USERTYPE -> 'id' '=' TYPES ';'

VARS -> ''
VARS -> 'var' VARLISTLIST

VARLISTLIST -> VARLIST VARLISTLISTPRIME

VARLISTLISTPRIME -> ''
VARLISTLISTPRIME -> VARLISTLIST

VARLIST -> TYPES IDLIST ';'

IDLIST -> 'id' IDATTR IDLISTPRIME

IDLISTPRIME -> ''
IDLISTPRIME -> ',' IDLIST

IDATTR -> ''
IDATTR -> '=' EXPR

VARIABLE -> '=>' 'id' VARIABLEPRIME
VARIABLE -> '[' EXPRLIST+ ']' VARIABLEPRIME

VARIABLEPRIME -> VARIABLE
VARIABLEPRIME -> ''

BLOCK -> 'begin' STMTS 'end'

STMTS -> STMT STMTLISTPRIME

STMTLISTPRIME -> ''
STMTLISTPRIME -> ';' STMTS

STMT -> ''
STMT -> 'label' STMT
STMT -> BLOCK
STMT -> WRITESTMT
STMT -> WRITELNSTMT
STMT -> READSTMT
STMT -> READLNSTMT
STMT -> LOOPBLOCK
STMT -> IFBLOCK
STMT -> FORBLOCK
STMT -> CASEBLOCK
STMT -> GOTOSTMT
STMT -> 'id' STMTPRIME
STMT -> EXITSTMT
STMT -> RETURNSTMT

STMTPRIME -> ATTRSTMT
STMTPRIME -> SUBPROGCALL

SUBPROGCALL -> '(' EXPRLIST ')'

EXISTSTMT -> 'exitwhen' '(' EXPR ')'

RETURNSTMT -> 'return' EXPR

ATTRSTMT -> 'id' ATTRSTMTPRIME

ATTRSTMTPRIME -> VARIABLE ':=' EXPR
ATTRSTMTPRIME -> ':=' EXPR

IFBLOCK -> 'if' '(' EXPR ')' STMT ELSEBLOCK

ELSEBLOCK -> ''
ELSEBLOCK -> 'else' STMT

LOOPBLOCK -> 'loop' STMT

CASEBLOCK -> 'case' EXPR 'of' CASELIST CASEBLOCKPRIME

CASEBLOCKPRIME -> 'end'
CASEBLOCKPRIME -> 'else' STMT 'end'

CASELIST -> LITERALLIST ':' STMT ';'

LITERALLIST -> LITERAL LITERALLISTPRIME

LISTERALLISTPRIME -> ''
LISTERALLISTPRIME -> ',' LITERALLIST

GOTOSTMT -> 'goto' 'label'

FORBLOCK -> 'for' 'id' FORBLOCKPRIME

FORBLOCKPRIME -> VARIABLE ':=' EXPR 'to' EXPR 'step' EXPR 'do' STMT
FORBLOCKPRIME -> ':=' EXPR 'to' EXPR 'step' EXPR 'do' STMT

EXPR -> CONJ DISJ

DISJ -> ''
DISJ -> '||' CONJ

FINAL-TERM -> 'id' FINAL-TERMPRIME
FINAL-TERM -> LITERAL
FINAL-TERM -> '(' EXPR ')'

FINAL-TERMPRIME -> VARIABLE
FINAL-TERMPRIME -> ''
FINAL-TERMPRIME -> SUBPROGCALL

ADD-OP -> '+'
ADD-OP -> '-'

MUL-OP -> '*'
MUL-OP -> '/'
MUL-OP -> '%'

EQUALITY-OP -> '=='
EQUALITY-OP -> '!='

RELATIONAL-OP -> '<'
RELATIONAL-OP -> '<='
RELATIONAL-OP -> '>'
RELATIONAL-OP -> '>='

CONJ -> COMP CONJPRIME

CONJPRIME -> ''
CONJPRIME -> '&&' COMP

COMP -> RELATIONAL COMPPRIME

COMPPRIME -> ''
COMPPRIME -> EQUALITY-OP RELATIONAL

RELATIONAL -> SUM RELATIONALPRIME

RELATIONALPRIME -> ''
RELATIONALPRIME -> RELATIONAL-OP SUM

SUM -> NEG SUMPRIME

SUMPRIME -> ''
SUMPRIME -> ADD-OP NEG SUMPRIME

NEG -> MUL
NEG -> '!' MUL

MUL -> FINAL-TERM MUL'

MUL' -> ''
MUL' -> MUL-OP FINAL-TERM MUL'

LITERAL -> 'intliteral'
LITERAL -> 'realliteral'
LITERAL -> 'charliteral'
LITERAL -> 'stringliteral'
LITERAL -> 'subrangeliteral'

EXPRLIST -> ''
EXPRLIST -> EXPRLIST+

EXPRLIST+ -> EXPR EXPRLIST+PRIME

EXPRLIST+PRIME -> ''
EXPRLIST+PRIME -> ',' EXPRLIST+

SUBPROGRAMS -> ''
SUBPROGRAMS -> PROCEDURE SUBPROGRAMSPRIME
SUBPROGRAMS -> FUNCTION SUBPROGRAMSPRIME

SUBPROGRAMSPRIME -> ''
SUBPROGRAMSPRIME -> ';' SUBPROGRAMS

PROCEDURE -> 'proc' 'id' '(' PARAM ')' ';' DECL BLOCK

FUNCTION -> 'func' TYPES 'id' '(' PARAM ')' ';' DECL BLOCK

PARAM -> ''
PARAM -> VARLISTLIST

WRITESTMT -> 'write' '(' EXPR ')'

WRITELNSTMT -> 'writeln' '(' EXPR ')'

READSTMT -> 'read' '(' 'id' ')'

READLNSTMT -> 'readln' (' 'id' ')'
